@use "mixins" as *;
@use "variables" as *;

:host {
  width: 100%;
  padding-top: 4px;
  .title {
    width: 215px;
    height: 85px;
    object-fit: cover;
    position: relative;
    top: -10px;
    left: -80px;
  }

  .line {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .hidden {
    opacity: 0;
  }
  .pokedex {
    background: linear-gradient(to bottom, $red, $red-dark);
    border-radius: 20px;
    border: 3px solid $black;
    box-shadow: 4px 4px 10px $black-box-shadow;
    margin: auto;
    position: relative;
    width: 100%;
    min-height: calc(100vh - 70px);
    padding: 20px;
    max-width: 750px;

    .pokedex-header {
      display: flex;
      justify-content: flex-start;
      gap: 10px;
      margin-bottom: 20px;
      .scan-light {
        @include circle(45px, $cyan-ball, 4px solid $white, 0 0 5px $black);
        position: relative;

        .dot-light {
          @include scan-dot(10px, $cyan-light-ball, 3, -100%, -100%);
        }

        .dot-shadow {
          @include scan-dot(35px, $cyan-medium-ball, 2, -55%, -55%);
        }
      }

      .light {
        position: relative;

        &.red {
          @include circle(
            16px,
            $red-dark-ball,
            1px solid $black-opacity-ball,
            unseat
          );
          .ball {
            @include scan-dot(8px, $red-light-ball, 2, -70%, -60%);
          }
        }
        &.yellow {
          @include circle(
            16px,
            $yellow-dark-ball,
            1px solid $black-opacity-ball,
            unseat
          );
          .ball {
            @include scan-dot(8px, $yellow-light-ball, 2, -70%, -60%);
          }
        }
        &.green {
          @include circle(
            16px,
            $green-ball,
            1px solid $black-opacity-ball,
            unseat
          );
          .ball {
            @include scan-dot(8px, $green-light-ball, 2, -70%, -60%);
          }
        }
      }
    }

    .screen-outline {
      border-radius: 24px;
      margin-bottom: 20px;
      border: 16px solid $rose;
      overflow: hidden;
      .screen {
        width: 100%;
        background-color: $blue-light;
        padding: 10px;
        border-radius: 8px;
        min-height: 75dvh;
        max-height: 75dvh;
        transition: all 0.5s ease-in-out;
        text-align: center;
        box-shadow: inset 0px 0px 5px 1px $black;
        overflow-y: scroll;

        &:has(.loading) {
          overflow: hidden;
        }
      }
      @media screen and (min-height: 400px) and (min-width: 960px) {
        .screen {
          min-height: 41dvh;
          max-height: 41dvh;
        }
      }

      @media screen and (min-height: 900px) and (min-width: 960px) {
        .screen {
          min-height: 61dvh;
          max-height: 61dvh;
        }
      }
    }

    .controls {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      width: 90%;
      .buttons {
        display: flex;
        min-width: 80px;
        max-width: 250px;
        flex-wrap: wrap;
        gap: 16px;
      }

      .button {
        @include circle(30px, transparent);
        @include inset-button-shadow;
        cursor: pointer;
        transition: background-color 0.5s ease-in-out box-shadow 0.5s
          ease-in-out color 0.5s ease-in-out;
        &.blue {
          background-color: $blue-medium;
          &.active {
            background-color: $blue-dark;
            box-shadow: 0 0 12px $blue-medium;
            color: $white;
          }
        }
        &.orange {
          background-color: $orange;
          &.active {
            background-color: $orange-dark;
            box-shadow: 0 0 12px $orange-medium;
            color: $white;
          }
        }
        &.black {
          background-color: $black;
          color: $silver;
          span {
            font-size: 8px;
            position: relative;
            top: -2px;
          }
          &.active {
            background-color: $black-medium;
            color: $white;
            font-weight: bold;
          }
        }
        &.yellow {
          background-color: $yellow;

          &.active {
            background-color: $yellow-medium;
            box-shadow: 0 0 12px $yellow;
          }
        }
      }

      .d-pad {
        position: relative;
        width: 60px;
        height: 60px;
        transform: scale(1.5);

        div {
          position: absolute;
          background-color: $opacity-dark;
          width: 20px;
          height: 20px;
        }

        .up {
          top: 0;
          left: 20px;
        }
        .down {
          bottom: 0;
          left: 20px;
        }
        .left {
          cursor: pointer;
          left: 0;
          top: 20px;
        }
        .right {
          cursor: pointer;
          right: 0;
          top: 20px;
        }
        .center {
          cursor: pointer;
          left: 20px;
          top: 20px;
          background-color: $gray-medium;
        }
      }
    }
    .d-pad div {
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .d-pad .disabled {
      pointer-events: none;
      background-color: $gray-dark !important;
      opacity: 0.5;
    }
    .diagonal-up-left,
    .diagonal-down-right {
      position: absolute;
      width: 16px;
      height: 16px;
      background-color: $gray-light;
      cursor: pointer;
      transform: rotate(45deg);
    }

    .input-navigation {
      display: flex;
      flex-direction: column;
      gap: 8px;
      width: 50%;
    }
    .jump {
      background-color: $gray-light;
      border: 1px solid $gray-light;
      color: $white;
      font-family: "Press Start 2P", monospace;
      font-size: 10px;
      padding: 4px 6px;
      border-radius: 4px;
      cursor: pointer;
      height: 45px;
      align-self: center;
      position: relative;

      &:disabled {
        pointer-events: none;
        background-color: $gray;
      }

      &:first-child {
        right: -2px;
      }

      &:last-child {
        left: -2px;
      }
    }
    .panel-operations {
      display: flex;
      width: 100%;
    }
    .row {
      display: flex;
      align-items: center;
      justify-content: space-between;
      height: 10px;
    }
    .page-actions {
      width: 80%;
    }
    .pokedex-input-panel {
      padding-top: 20px;
      border-radius: 12px;
      width: 100%;
      color: $cyan;
      font-family: "Press Start 2P", monospace;
      display: flex;
      flex-direction: column;
      align-items: stretch;
      gap: 15px;
      label {
        font-size: 10px;
        height: 10px;
      }
      .input {
        padding: 0 10px;
        background-color: $blue-light;
        color: black;
        font-size: 14px;
        height: 40px;
        outline: none;
        box-shadow: inset 0 0 5px $blue-light;
        transition: all 0.2s ease;

        &:focus {
          border-color: $cyan;
          box-shadow: 0 0 8px $cyan;
        }
      }

      .page-index {
        font-size: 10px;
        color: $green;
        margin-top: 10px;
        text-shadow: 0 0 2px $black;
      }
    }
  }

  .pokeball {
    position: relative;
    height: 100px;
    width: 100px;
    background: linear-gradient(to bottom, $red-poke-ball 50%, $white 50%);
    border-radius: 50%;
    border: 8px solid $black;
    animation: spin 1s linear infinite;
  }

  .pokeball::before {
    content: "";
    position: absolute;
    height: 8px;
    width: 100px;
    background: $black;
    top: 50px;
    transform: translatey(-50%);
    right: 0;
  }

  .loading {
    @include center-flex(column);
    gap: 15px;
    background-color: $opacity-light;
    width: 102%;
    height: 65vh;
    position: relative;
    top: -7px;
    left: -8px;
  }

  .pokeball::after {
    content: "";
    position: absolute;
    height: 38px;
    width: 38px;
    border-radius: 50%;
    background: $white;
    top: 50px;
    left: 50px;
    transform: translate(-50%, -50%);
    box-shadow: inset 0 0 0 8px black, inset 0 0 0 10px $white,
      inset 0 0 0 12px $black;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}
